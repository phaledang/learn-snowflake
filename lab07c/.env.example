# =============================================================================
# Lab 07c Environment Configuration
# Advanced LangGraph with Multi-Database Thread Management & Azure AD Authentication
# =============================================================================
# Copy this file to .env and fill in your actual values

# =============================================================================
# ü§ñ AI PROVIDER CONFIGURATION (Required)
# =============================================================================

# Option 1: OpenAI (Recommended)
# Get your API key from https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# Option 2: Azure OpenAI (Alternative)
# Uncomment and configure if using Azure OpenAI instead
# AZURE_OPENAI_API_KEY=your_azure_openai_key
# AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/
# AZURE_OPENAI_API_VERSION=2024-02-01

# =============================================================================
# üóÑÔ∏è THREAD MANAGEMENT CONFIGURATION
# =============================================================================

# Enable thread persistence (true/false)
# Set to false to use in-memory only (no thread saving)
THREAD_MANAGE_CONNECTION=true

# Database Connection String
# Supports SQLite, Azure SQL, PostgreSQL, Cosmos DB
# Format: [database_type]://[connection_details]

# SQLite (Recommended for development)
DATABASE_CONNECTION_STRING=./lab07c_threads.db

# Azure SQL Example:
# DATABASE_CONNECTION_STRING=Server=myserver.database.windows.net;Database=mydb;Authentication=ActiveDirectoryDefault;

# PostgreSQL Example:
# DATABASE_CONNECTION_STRING=postgresql://username:password@localhost:5432/conversations

# Cosmos DB Example:
# DATABASE_CONNECTION_STRING=AccountEndpoint=https://myaccount.documents.azure.com:443/;AccountKey=mykey==;

# =============================================================================
# üîó SNOWFLAKE CONNECTION CONFIGURATION (Optional)
# =============================================================================

# Option 1: Connection String (Recommended)
# Single line configuration - supports both account formats
SNOWFLAKE_CONNECTION_STRING=snowflake://YOUR_USER:URL_ENCODED_PASSWORD@ACCOUNT_IDENTIFIER/DATABASE/SCHEMA?warehouse=WAREHOUSE_NAME&role=ROLE_NAME

# Examples:
# Short format (recommended):
# SNOWFLAKE_CONNECTION_STRING=snowflake://your-username:your-password@your-account.region.cloud/LEARN_SNOWFLAKE/SANDBOX?warehouse=LEARN_WH&role=ACCOUNTADMIN

# Full format (also works - automatically normalized):
# SNOWFLAKE_CONNECTION_STRING=snowflake://your-username:your-password@your-account.region.cloud.snowflakecomputing.com/LEARN_SNOWFLAKE/SANDBOX?warehouse=LEARN_WH&role=ACCOUNTADMIN

# For passwords with special characters, URL encode them:
# Example: MyP@ssw0rd! becomes MyP%40ssw0rd%21

# Option 2: Individual Environment Variables
# Uncomment and use these if not using connection string above
#SNOWFLAKE_ACCOUNT=your_account_identifier
#SNOWFLAKE_USER=your_username
#SNOWFLAKE_PASSWORD=your_password
#SNOWFLAKE_WAREHOUSE=COMPUTE_WH
#SNOWFLAKE_DATABASE=LEARN_SNOWFLAKE
#SNOWFLAKE_SCHEMA=SANDBOX
#SNOWFLAKE_ROLE=ACCOUNTADMIN

# =============================================================================
# üîê AUTHENTICATION CONFIGURATION (Optional)
# =============================================================================
# Enable Azure AD authentication for enterprise deployments

# Enable authentication requirement (true/false)
# When true, users must authenticate to access saved threads
# When false, threads are accessible without authentication
THREAD_REQUIRE_AUTHENTICATION=false

# Enable user-based thread isolation (true/false) 
# When true, users only see their own conversation threads
# When false, all threads are shared (not recommended for production)
THREAD_USER_ISOLATION=false

# Azure AD Configuration (required if authentication enabled)
# Get these values from Azure Portal ‚Üí Azure Active Directory ‚Üí App registrations
AZURE_CLIENT_ID=your_azure_app_client_id_here
AZURE_TENANT_ID=your_azure_tenant_id_here

# Optional: Azure AD Authority URL (defaults to public cloud)
# AZURE_AUTHORITY=https://login.microsoftonline.com/

# =============================================================================
# üîß ADVANCED CONFIGURATION
# =============================================================================

# Debug mode (true/false)
# Enables additional logging and error details
DEBUG_MODE=false

# Thread cleanup settings (optional)
# THREAD_MAX_AGE_DAYS=30
# THREAD_MAX_COUNT_PER_USER=100

# =============================================================================
# üìã AUTHENTICATION SETUP GUIDE
# =============================================================================
# 
# To enable Azure AD authentication:
# 
# 1. Azure AD App Registration:
#    - Go to Azure Portal ‚Üí Azure Active Directory ‚Üí App registrations
#    - Click "New registration"
#    - Name: "Lab 07c Snowflake AI Assistant"
#    - Supported account types: Choose appropriate option
#    - Redirect URI: Leave blank for now
#    - Click "Register"
# 
# 2. Configure Authentication:
#    - In your app registration, go to "Authentication"
#    - Under "Advanced settings", enable "Allow public client flows"
#    - Save changes
# 
# 3. Get Required Values:
#    - Copy "Application (client) ID" ‚Üí Use for AZURE_CLIENT_ID
#    - Copy "Directory (tenant) ID" ‚Üí Use for AZURE_TENANT_ID
# 
# 4. API Permissions (Optional):
#    - Go to "API permissions"
#    - Add Microsoft Graph permissions if needed
#    - Grant admin consent if required
# 
# 5. Test Configuration:
#    - Set THREAD_REQUIRE_AUTHENTICATION=true
#    - Set THREAD_USER_ISOLATION=true
#    - Run: python python/enhanced_assistant.py
# 
# =============================================================================
# üß™ TESTING CONFIGURATIONS
# =============================================================================
# 
# Development (No Authentication):
# THREAD_REQUIRE_AUTHENTICATION=false
# THREAD_USER_ISOLATION=false
# DATABASE_CONNECTION_STRING=./dev_threads.db
# 
# Testing (With Authentication):
# THREAD_REQUIRE_AUTHENTICATION=true
# THREAD_USER_ISOLATION=true
# AZURE_CLIENT_ID=your_test_client_id
# AZURE_TENANT_ID=your_test_tenant_id
# DATABASE_CONNECTION_STRING=./test_threads.db
# 
# Production (Full Security):
# THREAD_REQUIRE_AUTHENTICATION=true
# THREAD_USER_ISOLATION=true
# AZURE_CLIENT_ID=your_prod_client_id
# AZURE_TENANT_ID=your_prod_tenant_id
# DATABASE_CONNECTION_STRING=Server=prod.database.windows.net;Database=conversations;Authentication=ActiveDirectoryDefault;
# 
# =============================================================================
# üöÄ QUICK START COMMANDS
# =============================================================================
# 
# 1. Copy this file:
#    cp .env.example .env
# 
# 2. Edit your values:
#    nano .env  # or use your preferred editor
# 
# 3. Install dependencies:
#    pip install -r python/requirements.txt
# 
# 4. Test connection:
#    python python/final_test.py
# 
# 5. Run assistant:
#    python python/enhanced_assistant.py
# 
# 6. Test API (optional):
#    python python/thread_api.py
#    # Visit http://localhost:8000/docs
# 
# =============================================================================